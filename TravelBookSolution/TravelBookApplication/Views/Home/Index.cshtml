@model TravelBookApplication.Models.ViewModels.WelcomePageViewModel
@{
    ViewBag.Title = "Welcome to TravelBook!";
}

<h2>@ViewBag.Title</h2>


<!--<style type="text/css">
    div form input {
        margin-top: 1em;
    }
</style>-->

<div class="row">
    <div class="col-md-8">
        <div style="width: 300px">
            <p style="margin-left: 10px">
                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,
                quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse
                cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum
            </p>
        </div>
        @Html.ActionLink("Register", "Register", "Account")
        <!--<a href="#myModal" role="button" class="btn btn-default" data-toggle="modal" data-target="#myRegisterModal">Register</a>-->
    </div>
</div>
@*
<!-- register modal-->
<div class="modal fade" id="myRegisterModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Register a new user</h4>
            </div>
            <div class="modal-body">
                <section id="loginForm">
                    @using (Html.BeginForm("Register", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(m => m.RegisterModel.FirstName, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.RegisterModel.FirstName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.RegisterModel.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.RegisterModel.LastName, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.RegisterModel.LastName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.RegisterModel.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.RegisterModel.Gender, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                <label for="male">Male</label>
                                <input type="radio" name="sex" id="male" value="male" checked="checked" />
                                <label for="female">Female</label>
                                <input type="radio" name="sex" id="female" value="female" />
                                <!--@Html.LabelFor(m => m.RegisterModel.Gender, "Male")
                                @Html.RadioButtonFor(m => m.RegisterModel.Gender, "Male", new { @class = "form-control" })
                                @Html.LabelFor(m => m.RegisterModel.Gender, "Female")
                                @Html.RadioButtonFor(m => m.RegisterModel.Gender, "Female", new { @class = "form-control" })-->
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.RegisterModel.Birthday, new { @class = "col-md-2 control-label"})
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.RegisterModel.Birthday, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.RegisterModel.Birthday, "", new { @class = "danger-text" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.RegisterModel.Email, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.RegisterModel.Email, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.RegisterModel.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.RegisterModel.ConfirmEmail, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.RegisterModel.ConfirmEmail, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.RegisterModel.ConfirmEmail, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.RegisterModel.Password, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.PasswordFor(m => m.RegisterModel.Password, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.RegisterModel.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.RegisterModel.ConfirmPassword, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.PasswordFor(m => m.RegisterModel.ConfirmPassword, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.RegisterModel.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <!--<p>
                            @Html.ActionLink("Register as a new user", "Register")
                        </p>-->
                         Enable this once you have account confirmation enabled for password reset functionality
                            <p>
                                @Html.ActionLink("Forgot your password?", "ForgotPassword")
                            </p>
                    }
                </section>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <form method="post" style="float: right">
                    <button type="submit" class="btn btn-primary">Register</button>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- /register modal-->
<!-- login modal-->
<div class="modal fade" id="myLoginModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Log in</h4>
            </div>
            <div class="modal-body">
                <section id="loginForm">
                    @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(m => m.LoginModel.Email, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.LoginModel.Email, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.LoginModel.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.LoginModel.Password, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.PasswordFor(m => m.LoginModel.Password, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.LoginModel.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <div class="checkbox">
                                    @Html.CheckBoxFor(m => m.LoginModel.RememberMe)
                                    @Html.LabelFor(m => m.LoginModel.RememberMe)
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Log in" class="btn btn-default" />
                            </div>
                        </div>
                         Enable this once you have account confirmation enabled for password reset functionality
                            <p>
                                @Html.ActionLink("Forgot your password?", "ForgotPassword")
                            </p>
                    }
                </section>
            </div>
        </div>
    </div>
</div>
<!-- /login modal-->
*@
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}